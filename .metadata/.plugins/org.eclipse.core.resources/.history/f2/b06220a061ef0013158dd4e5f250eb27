package com.example.mycontactlist;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.ScrollView;
import android.os.Build;

public class ContactSettingsActivity extends ActionBarActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_contact_settings);
		initSettingsButton();
		initListButton();
		initMapButton();
		initSortByClick();
		initSortOrderClick();
		initSettings();
		initPickColorClick();
		ScrollView sv = (ScrollView)findViewById(R.id.scrollView1);

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.contact_settings, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	
	private void initListButton(){
    	ImageButton list= (ImageButton) findViewById(R.id.imageButtonList);
    	list.setOnClickListener(new View.OnClickListener(){
    		public void onClick (View v){
    			Intent intent = new Intent (ContactSettingsActivity.this, ContactListActivity.class);
    			intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    			startActivity(intent);
    		}
    	});
    }
    
    
    private void initMapButton(){
    	ImageButton list= (ImageButton) findViewById(R.id.imageButtonMap);
    	list.setOnClickListener(new View.OnClickListener(){
    		public void onClick (View v){
    			Intent intent = new Intent (ContactSettingsActivity.this, ContactMapActivity.class);
    			intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    			startActivity(intent);
    		}
    	});
    }
    
    
    private void initSettingsButton(){
    	ImageButton list = (ImageButton) findViewById(R.id.imageButtonSettings);
    	list.setEnabled(false);
    		}
    	
    private void initSettings() {
    	String sortBy = getSharedPreferences("MyContactListPreferences", Context.MODE_PRIVATE).getString("sortfield","contactname");
    	String sortOrder = getSharedPreferences("MyContactListPreferences",Context.MODE_PRIVATE).getString("sortorder","ASC");
    	String pickColor = getSharedPreferences("MyContactListPreferences",Context.MODE_PRIVATE).getString("pickcolor","Pink");
    	
    	RadioButton rbName = (RadioButton) findViewById(R.id.radioName);
    	RadioButton rbCity = (RadioButton) findViewById(R.id.radioCity);
    	RadioButton rbBirthDay = (RadioButton) findViewById(R.id.radioBirthday);
    	if (sortBy.equalsIgnoreCase("contactname")) {
    		rbName.setChecked(true);
    	}
    	else if (sortBy.equalsIgnoreCase("city")) {
    		rbCity.setChecked(true);
    	}
    	else {
    		rbBirthDay.setChecked(true);
    	}
    	
    	RadioButton rbAscending = (RadioButton)findViewById(R.id.radioAscending);
    	RadioButton rbDescending = (RadioButton) findViewById(R.id.radioDescending);
    	if (sortOrder.equalsIgnoreCase("ASC")){
    		rbAscending.setChecked(true);    		
    	}
    	else{
    		rbDescending.setChecked(true);
    	}
    	
    	RadioButton rbPink = (RadioButton)findViewById(R.id.radioPink);
    	RadioButton rbYellow = (RadioButton) findViewById(R.id.radioYellow);
    	if (pickColor.equalsIgnoreCase("Pink")){
    		rbPink.setChecked(true);    		
    	}
    	else{
    		rbYellow.setChecked(true);
    	}
    }
    
    private void initSortByClick() {
    	RadioGroup rgSortBy =(RadioGroup) findViewById(R.id.radioGroup1);
    	rgSortBy.setOnCheckedChangeListener(new OnCheckedChangeListener() {
    		
    		@Override
    		public void onCheckedChanged (RadioGroup arg0,int arg1) {
    			RadioButton rbName = (RadioButton) findViewById(R.id.radioName);
    				RadioButton rbCity =(RadioButton) findViewById(R.id.radioCity);
    			if (rbName.isChecked()) {
    				getSharedPreferences ("MyContactListPreferences",MODE_PRIVATE).edit().putString("sortfield", "contactname").commit();
    				}
    			else if (rbCity.isChecked()) {
    				getSharedPreferences("MyContactListPreferences",MODE_PRIVATE).edit().putString("sortfield", "city").commit();
    				
    			}
    			else {
    				getSharedPreferences ("MyContactListPreferences",MODE_PRIVATE).edit().putString("sortfield", "birthday").commit();
    				
    			}
    		}
    	});
    }
    
    private void initSortOrderClick(){
    	RadioGroup rgSortOrder = (RadioGroup) findViewById(R.id.radioGroup2);
    	rgSortOrder.setOnCheckedChangeListener(new OnCheckedChangeListener() {
    		
    		@Override
    		public void onCheckedChanged(RadioGroup arg0, int arg1) {
    			RadioButton rbAscending = (RadioButton)findViewById(R.id.radioAscending);
    			
    		if (rbAscending.isChecked()) {
    			getSharedPreferences("MyContactListPreferences",MODE_PRIVATE).edit().putString("sortorder", "ASC").commit();
    		}
    		else{
    			getSharedPreferences("MyContactListPreferences",MODE_PRIVATE).edit().putString("sortorder", "DESC").commit();
    		}
    		}
    	});
    }
    
    private void initPickColorClick(){
    	RadioGroup rgPickColor = (RadioGroup) findViewById(R.id.radioGroup3);
    	rgPickColor.setOnCheckedChangeListener(new OnCheckedChangeListener() {
    		
    		@Override
    		public void onCheckedChanged(RadioGroup arg0, int arg1) {
    			RadioButton rbPink = (RadioButton)findViewById(R.id.radioPink);
    			
    		if (rbPink.isChecked() == true) {
    			getSharedPreferences("MyContactListPreferences",MODE_PRIVATE).edit().putString("pickcolor", "PINK").commit();
    			ScrollView sv = (ScrollView)findViewById(R.id.scrollView2);
    			sv.setBackgroundColor(R.color.pink_background);
    		}
    		else{
    			getSharedPreferences("MyContactListPreferences",MODE_PRIVATE).edit().putString("pickcolor", "YELLOW").commit();
    			ScrollView sv = (ScrollView)findViewById(R.id.scrollView2);
    			sv.setBackgroundColor(R.color.yellow_background);
    		}
    		}
    	});
    }
	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		
	}

}
